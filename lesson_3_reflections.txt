When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository would be beneficial in many scenarios, such as:
    * For a collaborative project
    * For an open source project
    * For a project which needs to be accessed from different places
    * For general backup, in case local files get lost

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Auto-pull or syncing of repositories might be a bad idea because:
    * The local project might not be ready yet to incorporate the changes 
      introduced in the remote repository
    * The local project might be going in a different direction, and 
      would require branching before merging in the changes made in remote
      repository
    * There might be conflicts that would need resolution when automatically
      merging is not feasible or desirable
    * There would be no way to first see the changes before deciding whether
      we want the changes made in remote repository to be a part of our local
      project

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks   : Forks are clones of GitHub repo done on GitHub
    Use     : Whenever we want to extend/work/improve upon someone else's work
    Clones  : Clones are copies of Github or Local repo done locally
    Use     : Whenever we want to access someone's source locally
    Branches: Branches are different directions of progress of a single project
    Use     : Whenever we want to experiment on various aspects of the project

What is the benefit of having a copy of the last known state of the remote
stored locally?

    We might not always want to pull changes as the occur in the GitHub repository.
    So, if we have a copy of the remote stored locally, we can do what needs to be
    done (branching, optimization etc.) in order to make our project ready to 
    merge the remote changes.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Other ways of collaborating could be physically or through social networking 
    (Whatsapp, E-mail etc.). Almost everything would be harder, since there would
    no proper way of protecting against bug-inducing changes, suggesting changes 
    etc, and comparing changes, merging files, backing up would all become harder.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
